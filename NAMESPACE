# Generated by roxygen2 (4.1.1): do not edit by hand

S3method(get_args,metab_model)
S3method(get_data,metab_model)
S3method(get_fit,metab_model)
S3method(get_info,metab_model)
S3method(get_version,metab_model)
S3method(predict_DO,metab_model)
S3method(predict_DO,metab_night)
S3method(predict_metab,metab_model)
export(calc_DO_at_sat)
export(calc_DO_deficit)
export(calc_DO_mod)
export(calc_DO_mod_by_diff)
export(calc_DO_mod_with_error)
export(calc_air_pressure)
export(calc_depth)
export(calc_is_daytime)
export(calc_schmidt)
export(calc_solar_insolation)
export(calc_sun_rise_set)
export(calc_velocity)
export(convert_GMT_to_localtime)
export(convert_GMT_to_solartime)
export(convert_PAR_to_SW)
export(convert_SW_to_PAR)
export(convert_date_to_doyhr)
export(convert_doyhr_to_date)
export(convert_k600_to_kGAS)
export(convert_kGAS_to_k600)
export(convert_localtime_to_GMT)
export(convert_solartime_to_GMT)
export(get_args)
export(get_data)
export(get_fit)
export(get_info)
export(get_version)
export(metab_bayes)
export(metab_mle)
export(metab_model)
export(metab_night)
export(mm_data)
export(mm_filter_valid_days)
export(mm_is_valid_day)
export(mm_validate_data)
export(plot_DO_preds)
export(predict_DO)
export(predict_metab)
export(prepjags_bayes)
export(runjags_bayes)
exportClasses(metab_bayes)
exportClasses(metab_mle)
exportClasses(metab_model)
exportClasses(metab_night)
import(dplyr)
import(ggplot2)
import(methods)
import(parallel)
import(runjags)
importFrom(LakeMetabolizer,getSchmidt)
importFrom(LakeMetabolizer,is.day)
importFrom(LakeMetabolizer,k600.2.kGAS.base)
importFrom(LakeMetabolizer,o2.at.sat.base)
importFrom(LakeMetabolizer,par.to.sw.base)
importFrom(LakeMetabolizer,sun.rise.set)
importFrom(LakeMetabolizer,sw.to.par.base)
importFrom(RCurl,getURL)
importFrom(XML,xmlParse)
importFrom(lazyeval,lazy_dots)
importFrom(lubridate,floor_date)
importFrom(lubridate,force_tz)
importFrom(lubridate,tz)
importFrom(lubridate,with_tz)
importFrom(unitted,get_units)
importFrom(unitted,is.unitted)
importFrom(unitted,u)
importFrom(unitted,v)
importFrom(unitted,verify_units)

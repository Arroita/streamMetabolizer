% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/specs_bayes.R, R/specs_bayes_jags_nopool_obserr.R, R/specs_bayes_jags_nopool_procobserr.R, R/specs_bayes_stan_nopool_obserr.R, R/specs_bayes_stan_nopool_procobserr.R
\name{specs_bayes}
\alias{specs_bayes}
\alias{specs_bayes_jags_nopool_obserr}
\alias{specs_bayes_jags_nopool_procobserr}
\alias{specs_bayes_stan_nopool_obserr}
\alias{specs_bayes_stan_nopool_procobserr}
\title{Functions giving specifications for metab_bayes model variants}
\usage{
specs_bayes_jags_nopool_obserr(model_file = "nopool_obserr_pairmeans.jags",
  bayes_fun = "bayes_1ply", bayes_software = "jags", GPP_daily_mu = 10,
  GPP_daily_sigma = 10, ER_daily_mu = -10, ER_daily_sigma = 10,
  K600_daily_mu = 10, K600_daily_sigma = 10, err_obs_sigma_min = 0,
  err_obs_sigma_max = 0.5, priors = FALSE, params_out = c("GPP_daily",
  "ER_daily", "K600_daily", "err_obs_sigma"), n_chains = 4, n_cores = 1,
  adapt_steps = 100, burnin_steps = 40, num_saved_steps = 400,
  thin_steps = 1, verbose = FALSE)


  specs_bayes_jags_nopool_procobserr(model_file = "nopool_procobserr_pairmeans.jags",
  bayes_fun = "bayes_1ply", bayes_software = "jags", GPP_daily_mu = 10,
  GPP_daily_sigma = 10, ER_daily_mu = -10, ER_daily_sigma = 10,
  K600_daily_mu = 10, K600_daily_sigma = 10, err_proc_phi_min = 0,
  err_proc_phi_max = 1, err_proc_sigma_min = 0,
  err_proc_sigma_max = 5e-04, err_obs_sigma_min = 0,
  err_obs_sigma_max = 0.5, priors = FALSE, params_out = c("GPP_daily",
  "ER_daily", "K600_daily", "err_obs_sigma", "err_proc_sigma", "err_proc_phi"),
  n_chains = 4, n_cores = 1, adapt_steps = 100, burnin_steps = 40,
  num_saved_steps = 400, thin_steps = 1, verbose = FALSE)

specs_bayes_stan_nopool_obserr(model_file = "nopool_obserr_pairmeans.stan",
  bayes_fun = "bayes_1ply", bayes_software = "stan", GPP_daily_mu = 10,
  GPP_daily_sigma = 10, ER_daily_mu = -10, ER_daily_sigma = 10,
  K600_daily_mu = 10, K600_daily_sigma = 10, err_obs_sigma_min = 0,
  err_obs_sigma_max = 0.5, priors = FALSE, params_out = c("GPP_daily",
  "ER_daily", "K600_daily", "err_obs_sigma"), n_chains = 4, n_cores = 1,
  burnin_steps = 500, num_saved_steps = 500, thin_steps = 1,
  verbose = FALSE)


  specs_bayes_stan_nopool_procobserr(model_file = "nopool_obserr_pairmeans.stan",
  bayes_fun = "bayes_1ply", bayes_software = "stan", GPP_daily_mu = 10,
  GPP_daily_sigma = 10, ER_daily_mu = -10, ER_daily_sigma = 10,
  K600_daily_mu = 10, K600_daily_sigma = 10, err_obs_sigma_min = 0,
  err_obs_sigma_max = 0.5, priors = FALSE, params_out = c("GPP_daily",
  "ER_daily", "K600_daily", "err_obs_sigma"), n_chains = 4, n_cores = 1,
  burnin_steps = 500, num_saved_steps = 500, thin_steps = 1,
  verbose = FALSE)
}
\arguments{
\item{model_file}{character. The model definition file to use. The file may
be specified either as a file path relative to the streamMetabolizer
models/bayes directory (the first assumption; this directory can be found
with \code{system.file("models/bayes", package="streamMetabolizer")}) or as
an absolute path or a path relative to the current working directory (the
second assumption, if the first assumption turns up no files of the given
name). For example, the default is
\code{"nopool_procobserr_pairmeans.jags"}. The containing folder is in this
case \code{"models/bayes"}. The suffix, 'jags', will determine which MCMC
software package is used. The file name (in this case
\code{"nopool_procobserr_pairmeans.jags"}) will determine not only the
model file to use but also which variables are packaged and sent to the
MCMC software.}

\item{bayes_fun}{character in \code{c('bayes_1ply', 'bayes_all')} indicating
whether the data should be split into daily chunks first ('bayes_1ply') or
passed to the model fitting function in one big chunk ('bayes_all')}

\item{bayes_software}{character in \code{c('jags','stan')} indicating the
  software package to use for the MCMC process}

\item{GPP_daily_mu}{The mean of a dnorm distribution for GPP_daily, the daily
rate of gross primary production}

\item{GPP_daily_sigma}{The standard deviation of a dnorm distribution for
GPP_daily, the daily rate of gross primary production}

\item{ER_daily_mu}{The mean of a dnorm distribution for ER_daily, the daily
rate of ecosystem respiration}

\item{ER_daily_sigma}{The standard deviation of a dnorm distribution for
ER_daily, the daily rate of ecosystem respiration}

\item{K600_daily_mu}{The mean of a dnorm distribution for K600_daily, the
daily rate of reaeration}

\item{K600_daily_sigma}{The standard deviation of a dnorm distribution for
K600_daily, the daily rate of reaeration}

\item{err_obs_sigma_min}{The lower bound on a dunif distribution for
err_obs_sigma, the standard deviation of the observation error}

\item{err_obs_sigma_max}{The upper bound on a dunif distribution for
  err_obs_sigma, the standard deviation of the observation error}

\item{priors}{logical. Should the data list be modified such that JAGS will
return priors rather than posteriors?}

\item{params_out}{a character vector of parameters whose values in the MCMC
runs should be recorded and summarized}

\item{n_chains}{the number of chains to run}

\item{n_cores}{the number of cores to apply to this run}

\item{adapt_steps}{the number of steps to use in adapting the model}

\item{burnin_steps}{the number of steps to run and ignore before starting to
collect MCMC 'data'}

\item{num_saved_steps}{the number of MCMC steps to save}

\item{thin_steps}{the number of steps to move before saving another step}

\item{verbose}{logical. give status messages?}

\item{err_proc_phi_min}{The lower bound on a dunif distribution for
err_proc_phi, the process error autocorrelation coefficient}

\item{err_proc_phi_max}{The upper bound on a dunif distribution for
err_proc_phi, the process error autocorrelation coefficient}

\item{err_proc_sigma_min}{The lower bound on a dunif distribution for
err_proc_sigma, the standard deviation of the process error}

\item{err_proc_sigma_max}{The upper bound on a dunif distribution for
err_proc_sigma, the standard deviation of the process error}
}
\description{
Functions giving specifications for metab_bayes model variants

\code{specs_bayes_jags_nopool_obserr} - a JAGS model with no pooling and only
observation error. Compatible \code{model_file} options are
\code{c('nopool_obserr_pairmeans.jags', 'nopool_obserr_Euler.jags')}.

\code{specs_bayes_jags_nopool_procobserr} - a JAGS model with no pooling and
both process and observation error. Compatible \code{model_file} options are
\code{c('nopool_procobserr_pairmeans.jags', 'nopool_procobserr_Euler.jags')}.

\code{specs_bayes_stan_nopool_obserr} - a Stan model with no pooling and only
observation error. Compatible \code{model_file} options are
\code{c('nopool_obserr_pairmeans.stan', 'nopool_obserr_Euler.stan')}.

\code{specs_bayes_stan_nopool_obserr} - a Stan model with no pooling and both
process and observation error. Compatible \code{model_file} options are
\code{c('nopool_procobserr_pairmeans.stan', 'nopool_procobserr_Euler.stan')}.
}
\seealso{
Other model_specs: \code{\link{specs_mle}},
  \code{\link{specs_mle_obserr}},
  \code{\link{specs_mle_procerr}};
  \code{\link{specs_night}},
  \code{\link{specs_night_basic}}; \code{\link{specs_sim}},
  \code{\link{specs_sim_basic}}
}


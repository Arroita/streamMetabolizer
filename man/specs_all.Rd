% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/specs_all.R
\name{specs_all}
\alias{specs_all}
\title{List all possible arguments and the specs lists in which they occur}
\usage{
specs_all(GPP_init, ER_init, K600_init, calc_DO_fun, ODE_method, model_file,
  bayes_fun, bayes_software, keep_mcmcs, GPP_daily_mu, GPP_daily_sigma,
  ER_daily_mu, ER_daily_sigma, K600_daily_mu, K600_daily_sigma,
  err_proc_phi_min, err_proc_phi_max, err_proc_sigma_min, err_proc_sigma_max,
  err_obs_sigma_min, err_obs_sigma_max, err_proc_acor_phi_min,
  err_proc_acor_phi_max, err_proc_acor_sigma_min, err_proc_acor_sigma_max,
  err_proc_iid_sigma_min, err_proc_iid_sigma_max, priors, params_out, n_chains,
  n_cores, adapt_steps, burnin_steps, num_saved_steps, thin_steps, verbose,
  err.obs.sigma, err.obs.phi, err.proc.sigma, err.proc.phi, sim.seed)
}
\arguments{
\item{GPP_init}{the inital value of daily GPP to use in the NLM fitting
process}

\item{ER_init}{the inital value of daily ER to use in the NLM fitting process}

\item{K600_init}{the inital value of daily K600 to use in the NLM fitting
process. Ignored if K600 is supplied in data_daily, except for those dates
where K600 is NA. If there are any such dates, K600_init must have a
numeric (non-NA) value, as this will be used to estimate K600 for those
dates.}

\item{calc_DO_fun}{the function to use to build DO estimates from GPP, ER,
etc. default is calc_DO_mod, but could also be calc_DO_mod_by_diff}

\item{ODE_method}{character specifying the numerical integration method to
use. The default is pairmeans, where the change in DO between times t-1 and
t is a function of the mean DO.sat between times t-1 and t, mean temp.water
between times t-1 and t, mean light between times t-1 and t, etc. The Euler
method is currently more common in the literature, with each time step
depending entirely on DO.sat, GPP, etc. at time t. Both methods are
imprecise and fast, relative to Runge-Kutta or other numerical integration
methods}

\item{model_file}{character. The model definition file to use. The file may
be specified either as a file path relative to the streamMetabolizer
models/bayes directory (the first assumption; this directory can be found
with \code{system.file("models/bayes", package="streamMetabolizer")}) or as
an absolute path or a path relative to the current working directory (the
second assumption, if the first assumption turns up no files of the given
name). For example, the default is
\code{"nopool_procobserr_pairmeans.jags"}. The containing folder is in this
case \code{"models/bayes"}. The suffix, 'jags', will determine which MCMC
software package is used. The file name (in this case
\code{"nopool_procobserr_pairmeans.jags"}) will determine not only the
model file to use but also which variables are packaged and sent to the
MCMC software.}

\item{bayes_fun}{character in \code{c('bayes_1ply', 'bayes_all')} indicating
whether the data should be split into daily chunks first ('bayes_1ply') or
passed to the model fitting function in one big chunk ('bayes_all')}

\item{bayes_software}{character in \code{c('jags','stan')} indicating the
software package to use for the MCMC process}

\item{keep_mcmcs}{TRUE, FALSE, or (for nopool models) a vector of dates
  (coerced with as.Date if character, etc.) indicating whether to keep all of
  the mcmc model objects (TRUE), none of them (FALSE), or specific dates. The
  default is FALSE because these objects can be very large.}

\item{GPP_daily_mu}{The mean of a dnorm distribution for GPP_daily, the daily
rate of gross primary production}

\item{GPP_daily_sigma}{The standard deviation of a dnorm distribution for
GPP_daily, the daily rate of gross primary production}

\item{ER_daily_mu}{The mean of a dnorm distribution for ER_daily, the daily
rate of ecosystem respiration}

\item{ER_daily_sigma}{The standard deviation of a dnorm distribution for
ER_daily, the daily rate of ecosystem respiration}

\item{K600_daily_mu}{The mean of a dnorm distribution for K600_daily, the
daily rate of reaeration}

\item{K600_daily_sigma}{The standard deviation of a dnorm distribution for
  K600_daily, the daily rate of reaeration}

\item{err_proc_phi_min}{The lower bound on a dunif distribution for
err_proc_phi, the process error autocorrelation coefficient}

\item{err_proc_phi_max}{The upper bound on a dunif distribution for
err_proc_phi, the process error autocorrelation coefficient}

\item{err_proc_sigma_min}{The lower bound on a dunif distribution for
err_proc_sigma, the standard deviation of the process error}

\item{err_proc_sigma_max}{The upper bound on a dunif distribution for
err_proc_sigma, the standard deviation of the process error}

\item{err_obs_sigma_min}{The lower bound on a dunif distribution for
err_obs_sigma, the standard deviation of the observation error}

\item{err_obs_sigma_max}{The upper bound on a dunif distribution for
  err_obs_sigma, the standard deviation of the observation error}

\item{err_proc_acor_phi_min}{lower bound on the autocorrelation coefficient
for the autocorrelated component of process & observation error}

\item{err_proc_acor_phi_max}{upper bound on the autocorrelation coefficient
for the autocorrelated component of process & observation error}

\item{err_proc_acor_sigma_min}{lower bound on the standard deviation of the
autocorrelated component of process & observation error}

\item{err_proc_acor_sigma_max}{upper bound on the standard deviation of the
autocorrelated component of process & observation error}

\item{err_proc_iid_sigma_min}{lower bound on the standard deviation of the
uncorrelated (IID) component of process & observation error}

\item{err_proc_iid_sigma_max}{upper bound on the standard deviation of the
  uncorrelated (IID) component of process & observation error}

\item{priors}{logical. Should the data list be modified such that JAGS will
return priors rather than posteriors?}

\item{params_out}{a character vector of parameters whose values in the MCMC
runs should be recorded and summarized}

\item{n_chains}{the number of chains to run}

\item{n_cores}{the number of cores to apply to this run}

\item{adapt_steps}{the number of steps to use in adapting the model}

\item{burnin_steps}{the number of steps to run and ignore before starting to
collect MCMC 'data'}

\item{num_saved_steps}{the number of MCMC steps to save}

\item{thin_steps}{the number of steps to move before saving another step}

\item{verbose}{logical. give status messages?}

\item{err.obs.sigma}{The sd of observation error, or 0 for no observation
error. Observation errors are those applied to DO.mod after generating the
full time series of modeled values.}

\item{err.obs.phi}{The autocorrelation coefficient of the observation errors,
or 0 for uncorrelated errors.}

\item{err.proc.sigma}{The sd of process error, or 0 for no process error.
Process errors are applied at each time step, and therefore propagate into
the next timestep.}

\item{err.proc.phi}{The autocorrelation coefficient of the process errors, or
0 for uncorrelated errors.}

\item{sim.seed}{NA to specify that each call to predict_DO should generate
  new values, or an integer, as in the \code{seed} argument to
  \code{\link{set.seed}}, specifying the seed to set before every execution
  of predict_DO}
}
\value{
a data.frame with arguments as rows, columns as spec_ functions, and
  values as logicals: is this an argument to this function?
}
\description{
List all possible arguments and the specs lists in which they occur
}
\examples{
specs_table <- specs_all()
specs_table$spec
specs_table[specs_table$specs_bayes_jags_nopool_obserr, 'spec']
}


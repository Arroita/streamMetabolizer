% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/specs_funs.R
\name{specs_funs}
\alias{specs_funs}
\title{Identify a model_specs function by model traits}
\usage{
specs_funs(metab_fun = c("metab_bayes", "metab_mle", "metab_night",
  "metab_sim"), software = c("jags", "stan", NA), pool_days = c(TRUE,
  FALSE), err_obs_iid = c(TRUE, FALSE), err_proc_iid = c(TRUE, FALSE),
  err_proc_acor = c(TRUE, FALSE))
}
\arguments{
\item{metab_fun}{The model fitting function, which defines the method
(metab_mle = Maximum Likelihood Estimation, metab_bayes = Bayesian MCMC,
etc.)}

\item{software}{The modeling software used, if any, in addition to R (mainly
applies to Bayesian methods: JAGS, Stan, etc.)}

\item{pool_days}{Does the model use pooling to combine information among
days?}

\item{err_obs_iid}{Does the model accommodate IID (independent and
identically distributed) observation error?}

\item{err_proc_iid}{Does the model accommodate IID process error? Process
error causes autocorrelation in total prediction error but needn't be
autocorrelated itself. If autocorrelation parameters are not defined for
the process errors, we consider the process errors to be IID.}

\item{err_proc_acor}{Does the model accommodate autocorrelated process error?
If the model includes autocorrelation parameters for process error, even if
the autocorrelation coefficient might ultimately be given a value of 0, we
consider the model to accommodate autocorrelated error.}
}
\description{
Identify a model_specs function by model traits
}
\examples{
specs_funs()
specs_funs(metab_fun="metab_mle", err_obs_iid=TRUE, err_proc_iid=FALSE)$specs_fun
dplyr::filter(specs_funs(), err_proc_iid | err_proc_acor)
}


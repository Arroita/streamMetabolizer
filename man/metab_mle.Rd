% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metab_mle.R
\name{metab_mle}
\alias{metab_mle}
\title{Maximum likelihood metabolism model fitting function}
\usage{
metab_mle(model_specs = specs(mm_name("mle")), data = mm_data(solar.time,
  DO.obs, DO.sat, depth, temp.water, light), data_daily = mm_data(date, K600,
  optional = "all"), info = NULL, day_start = 4, day_end = 27.99,
  tests = c("full_day", "even_timesteps", "complete_data"))
}
\arguments{
\item{model_specs}{a list of model specifications and parameters for a model.
Although this may be specified manually, it is easier and safer to use
\code{specs} to generate the list. The help file for that functions lists
the necessary parameters, describes them in detail, and gives default
values.}

\item{data}{data.frame of input data at the temporal resolution of raw 
observations. Columns must have the same names, units, and format as the 
default. See \code{\link{mm_data}} for a full data description.}

\item{data_daily}{data.frame containing inputs with a daily timestep. See 
\code{\link{mm_data}} for a full data description.}

\item{info}{any information, in any format, that you would like to store 
within the metab_model object}
}
\value{
A metab_mle object containing the fitted model. This object can be 
  inspected with the functions in the \code{\link{metab_model_interface}}.
}
\description{
Uses maximum likelihood to fit a model to estimate GPP and ER from input data
on DO, temperature, light, etc.
}
\examples{
# set the date in several formats
start.chron <- chron::chron(dates="08/23/12", times="22:00:00")
end.chron <- chron::chron(dates="08/25/12", times="06:00:00")
start.posix <- as.POSIXct(format(start.chron, "\%Y-\%m-\%d \%H:\%M:\%S"), tz="UTC")
end.posix <- as.POSIXct(format(end.chron, "\%Y-\%m-\%d \%H:\%M:\%S"), tz="UTC")
mid.date <- as.Date(start.posix + (end.posix - start.posix)/2, tz=lubridate::tz(start.posix))
start.numeric <- as.numeric(start.posix - as.POSIXct(format(mid.date, "\%Y-\%m-\%d 00:00:00"),
   tz="UTC"), units='hours')
end.numeric <- as.numeric(end.posix - as.POSIXct(format(mid.date, "\%Y-\%m-\%d 00:00:00"),
  tz="UTC"), units='hours')

# get, format, & subset data
vfrench <- streamMetabolizer:::load_french_creek(attach.units=FALSE)
vfrenchshort <- vfrench[vfrench$solar.time >= start.posix & vfrench$solar.time <= end.posix, ]

# PRK
get_fit(mm <- metab_mle(data=vfrenchshort, day_start=start.numeric, 
  day_end=end.numeric))[2,c("GPP","ER","K600","minimum")]
plot_DO_preds(predict_DO(mm))
streamMetabolizer:::load_french_creek_std_mle(vfrenchshort, estimate='PRK')

# PR
get_fit(mm <- metab_mle(data=vfrenchshort, data_daily=data.frame(date=mid.date, K600=35), 
  day_start=start.numeric, day_end=end.numeric))[2,c("GPP","ER","K600","minimum")]
get_fitting_time(mm)
plot_DO_preds(predict_DO(mm))
streamMetabolizer:::load_french_creek_std_mle(vfrenchshort, estimate='PR', K=35)

\dontrun{
  metab_mle(data=data.frame(empty="shouldbreak"))
 
  # PRK and PR with process error
  get_fit(mm <- metab_mle(data=vfrenchshort, 
    model_specs=specs('m_np_pi_pm_km.nlm'), 
    day_start=start.numeric, day_end=end.numeric))[2,c("GPP","ER","K600","minimum")]
  plot_DO_preds(predict_DO(mm))
  get_fit(mm <- metab_mle(data=vfrenchshort, data_daily=data.frame(date=mid.date, K600=35), 
    model_specs=specs('m_np_pi_pm_km.nlm'), 
    day_start=start.numeric, day_end=end.numeric))[2,c("GPP","ER","K600","minimum")]
  plot_DO_preds(predict_DO(mm))
}
}
\author{
Alison Appling, Jordan Read, Luke Winslow
}
\seealso{
Other metab_model: \code{\link{metab_Kmodel}},
  \code{\link{metab_bayes}}, \code{\link{metab_night}},
  \code{\link{metab_sim}}
}

